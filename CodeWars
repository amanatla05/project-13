//Challange 2 solution
function mergeArrays(arr1, arr2) {
  let mergedArray = [];
  let i = 0; // Index for arr1
  let j = 0; // Index for arr2

  while (i < arr1.length && j < arr2.length) {
    if (arr1[i] < arr2[j]) {
      if (mergedArray[mergedArray.length - 1] !== arr1[i]) {
        mergedArray.push(arr1[i]);
      }
      i++;
    } else if (arr1[i] > arr2[j]) {
      if (mergedArray[mergedArray.length - 1] !== arr2[j]) {
        mergedArray.push(arr2[j]);
      }
      j++;
    } else {
      // If the elements are equal, add one of them to the merged array.
      if (mergedArray[mergedArray.length - 1] !== arr1[i]) {
        mergedArray.push(arr1[i]);
      }
      i++;
      j++;
    }
  }

  // Add any remaining elements from arr1 to the merged array
  while (i < arr1.length) {
    if (mergedArray[mergedArray.length - 1] !== arr1[i]) {
      mergedArray.push(arr1[i]);
    }
    i++;
  }

  // Add any remaining elements from arr2 to the merged array
  while (j < arr2.length) {
    if (mergedArray[mergedArray.length - 1] !== arr2[j]) {
      mergedArray.push(arr2[j]);
    }
    j++;
  }

  return mergedArray;
}

// Example usage:
const arr1 = [1, 3, 5, 7];
const arr2 = [2, 4, 6, 7];
const mergedResult = mergeArrays(arr1, arr2);
console.log(mergedResult); // Output: [1, 2, 3, 4, 5, 6, 7]

